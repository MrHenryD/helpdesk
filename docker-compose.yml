services:

  app:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.local
    command: ["debug"]
    volumes:
      - ./src:/opt/helpdesk
      - ./docker/entrypoint.sh:/opt/helpdesk/entrypoint.sh:ro
    ports:
      - 8081:8000
    environment:
      - DATABASE_URI=postgresql://postgres:postgres@db/foo
      - TEST=1
    depends_on:
      migrate:
        condition: service_completed_successfully
  
  migrate:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.local
    command: ["migrate"]
    volumes:
      - ./src:/opt/helpdesk
      - ./docker/entrypoint.sh:/opt/helpdesk/entrypoint.sh:ro
    environment:
      - DATABASE_URI=postgresql://postgres:postgres@db/foo
      - TEST=1
    depends_on:
      db:
        condition: service_healthy


  db:
    image: ${POSTGRES_IMAGE:-postgres:17.3}
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=foo